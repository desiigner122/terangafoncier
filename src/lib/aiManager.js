/**
 * Gestionnaire d'Intelligence Artificielle pour Teranga Foncier
 * Int√©gration avec OpenAI GPT et services d'analytics avanc√©s
 */

import { supabase } from './customSupabaseClient';

class AIManager {
  constructor() {
    this.apiKey = import.meta.env.VITE_OPENAI_API_KEY;
    this.baseURL = 'https://api.openai.com/v1';
    this.model = 'gpt-4o-mini'; // Mod√®le plus √©conomique et rapide
    this.isEnabled = Boolean(this.apiKey);
    
    // Log du statut d'activation
    if (this.isEnabled) {
      console.log('ü§ñ IA Teranga Foncier activ√©e avec OpenAI GPT-4o-mini');
    } else {
      console.log('‚ö†Ô∏è IA en mode simulation - Cl√© OpenAI manquante');
    }
  }

  /**
   * Analyse pr√©dictive des tendances utilisateurs
   */
  async predictUserTrends(userData) {
    if (!this.isEnabled) {
      return this.getMockPredictions();
    }

    try {
      const prompt = `
        Analyse ces donn√©es utilisateurs immobiliers au S√©n√©gal et fournis des pr√©dictions:
        ${JSON.stringify(userData)}
        
        R√©ponds en JSON avec:
        - growth_prediction: pourcentage de croissance pr√©vu
        - peak_periods: p√©riodes de pic d'activit√©
        - market_insights: insights sur le march√©
        - recommendations: recommandations strat√©giques
      `;

      const response = await fetch(`${this.baseURL}/chat/completions`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          model: this.model,
          messages: [
            { role: 'system', content: 'Tu es un expert en analyse de donn√©es immobili√®res au S√©n√©gal.' },
            { role: 'user', content: prompt }
          ],
          temperature: 0.3
        })
      });

      const data = await response.json();
      return JSON.parse(data.choices[0].message.content);
    } catch (error) {
      console.error('Erreur IA pr√©diction:', error);
      return this.getMockPredictions();
    }
  }

  /**
   * Analyse des anomalies dans les donn√©es
   */
  async detectAnomalies(metrics) {
    if (!this.isEnabled) {
      return this.getMockAnomalies();
    }

    try {
      const prompt = `
        D√©tecte les anomalies dans ces m√©triques immobili√®res:
        ${JSON.stringify(metrics)}
        
        Identifie:
        - anomalies_detected: liste des anomalies
        - severity: niveau de gravit√© (low/medium/high)
        - explanation: explication de chaque anomalie
        - suggested_actions: actions correctives
      `;

      const response = await this.callOpenAI(prompt, 'Tu es un expert en d√©tection d\'anomalies pour plateformes immobili√®res.');
      return response;
    } catch (error) {
      console.error('Erreur d√©tection anomalies:', error);
      return this.getMockAnomalies();
    }
  }

  /**
   * G√©n√©ration de rapports intelligents
   */
  async generateIntelligentReport(data) {
    if (!this.isEnabled) {
      return this.getMockReport();
    }

    try {
      const prompt = `
        G√©n√®re un rapport intelligent pour cette plateforme immobili√®re s√©n√©galaise:
        ${JSON.stringify(data)}
        
        Structure:
        - executive_summary: r√©sum√© ex√©cutif
        - key_findings: d√©couvertes cl√©s
        - regional_analysis: analyse par r√©gion
        - recommendations: recommandations
        - action_plan: plan d'action
      `;

      const response = await this.callOpenAI(prompt, 'Tu es un consultant en business intelligence immobilier.');
      return response;
    } catch (error) {
      console.error('Erreur g√©n√©ration rapport:', error);
      return this.getMockReport();
    }
  }

  /**
   * Optimisation des prix bas√©e sur l'IA
   */
  async optimizePricing(propertyData) {
    if (!this.isEnabled) {
      return this.getMockPricingOptimization();
    }

    try {
      const prompt = `
        Optimise les prix pour ces propri√©t√©s au S√©n√©gal:
        ${JSON.stringify(propertyData)}
        
        Consid√®re:
        - Localisation (r√©gion, proximit√© services)
        - Type de propri√©t√©
        - March√© local
        - Tendances saisonni√®res
        
        Fournis:
        - suggested_price: prix sugg√©r√©
        - price_range: fourchette de prix
        - market_position: positionnement march√©
        - confidence_score: score de confiance
      `;

      const response = await this.callOpenAI(prompt, 'Tu es un expert en √©valuation immobili√®re au S√©n√©gal.');
      return response;
    } catch (error) {
      console.error('Erreur optimisation prix:', error);
      return this.getMockPricingOptimization();
    }
  }

  /**
   * Analyse de sentiment des utilisateurs
   */
  async analyzeSentiment(userFeedback) {
    if (!this.isEnabled) {
      return this.getMockSentimentAnalysis();
    }

    try {
      const prompt = `
        Analyse le sentiment de ces retours utilisateurs:
        ${JSON.stringify(userFeedback)}
        
        Fournis:
        - overall_sentiment: sentiment global (positive/neutral/negative)
        - sentiment_score: score de -1 √† 1
        - key_themes: th√®mes principaux
        - improvement_areas: zones d'am√©lioration
        - positive_highlights: points positifs
      `;

      const response = await this.callOpenAI(prompt, 'Tu es un expert en analyse de sentiment.');
      return response;
    } catch (error) {
      console.error('Erreur analyse sentiment:', error);
      return this.getMockSentimentAnalysis();
    }
  }

  /**
   * G√©n√©ration de r√©ponse contextuelle pour l'assistant IA
   */
  async generateContextualResponse(userQuery, pageContext) {
    if (!this.isEnabled) {
      return this.getMockContextualResponse(userQuery, pageContext);
    }

    try {
      const prompt = `
        Utilisateur sur Teranga Foncier demande: "${userQuery}"
        
        Contexte de la page: ${pageContext.pathname}
        Questions sugg√©r√©es: ${JSON.stringify(pageContext.contextualQuestions)}
        
        En tant qu'assistant IA sp√©cialis√© dans l'immobilier s√©n√©galais:
        - Fournis une r√©ponse claire et actionnable
        - Utilise des √©mojis pour rendre la r√©ponse engageante
        - Mentionne des fonctionnalit√©s sp√©cifiques de Teranga Foncier si pertinent
        - Reste concis (max 2-3 phrases)
        
        R√©ponds directement sans formatage JSON.
      `;

      const response = await fetch(`${this.baseURL}/chat/completions`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          model: this.model,
          messages: [
            { 
              role: 'system', 
              content: 'Tu es l\'assistant IA de Teranga Foncier, plateforme immobili√®re s√©n√©galaise. Sois helpful, concis et professionnel.' 
            },
            { role: 'user', content: prompt }
          ],
          temperature: 0.7,
          max_tokens: 150
        })
      });

      const data = await response.json();
      
      if (data.error) {
        console.error('Erreur OpenAI:', data.error);
        return this.getMockContextualResponse(userQuery, pageContext);
      }

      const aiResponse = data.choices[0].message.content.trim();
      
      // Log de l'interaction pour audit
      this.logAIInteraction('contextual_help', { userQuery, pageContext }, aiResponse);
      
      return aiResponse;
    } catch (error) {
      console.error('Erreur IA contextuelle:', error);
      return this.getMockContextualResponse(userQuery, pageContext);
    }
  }

  /**
   * R√©ponse contextuelle simul√©e
   */
  getMockContextualResponse(userQuery, pageContext) {
    const responses = {
      '/parcelles': 'üè† Utilisez les filtres avanc√©s pour trouver la parcelle id√©ale selon vos crit√®res de localisation, prix et surface.',
      '/dashboard': 'üìä Votre tableau de bord centralise toutes vos activit√©s : demandes en cours, favoris et notifications importantes.',
      '/messaging': 'üí¨ La messagerie s√©curis√©e vous permet de n√©gocier directement avec les vendeurs pour vos projets immobiliers.',
      'default': 'ü§ñ Je suis l√† pour vous guider dans votre parcours immobilier sur Teranga Foncier. Que puis-je vous expliquer ?'
    };

    return responses[pageContext.pathname] || responses.default;
  }

  /**
   * Recommandations personnalis√©es pour utilisateurs
   */
  async generatePersonalizedRecommendations(userProfile, propertyPreferences) {
    if (!this.isEnabled) {
      return this.getMockRecommendations();
    }

    try {
      const prompt = `
        G√©n√®re des recommandations personnalis√©es pour cet utilisateur:
        Profil: ${JSON.stringify(userProfile)}
        Pr√©f√©rences: ${JSON.stringify(propertyPreferences)}
        
        Recommande:
        - properties: propri√©t√©s sugg√©r√©es
        - search_tips: conseils de recherche
        - market_alerts: alertes march√©
        - investment_opportunities: opportunit√©s d'investissement
      `;

      const response = await this.callOpenAI(prompt, 'Tu es un conseiller immobilier IA sp√©cialis√© au S√©n√©gal.');
      return response;
    } catch (error) {
      console.error('Erreur recommandations:', error);
      return this.getMockRecommendations();
    }
  }

  /**
   * Appel g√©n√©rique √† OpenAI
   */
  async callOpenAI(prompt, systemMessage) {
    const response = await fetch(`${this.baseURL}/chat/completions`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${this.apiKey}`,
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        model: this.model,
        messages: [
          { role: 'system', content: systemMessage },
          { role: 'user', content: prompt }
        ],
        temperature: 0.3
      })
    });

    const data = await response.json();
    return JSON.parse(data.choices[0].message.content);
  }

  /**
   * Enregistrement des interactions IA pour audit
   */
  async logAIInteraction(type, input, output, userId = null) {
    try {
      await supabase.from('ai_interactions').insert({
        interaction_type: type,
        input_data: input,
        output_data: output,
        user_id: userId,
        created_at: new Date().toISOString()
      });
    } catch (error) {
      console.error('Erreur log IA:', error);
    }
  }

  /**
   * Donn√©es mock pour les tests (quand l'API n'est pas disponible)
   */
  getMockPredictions() {
    return {
      growth_prediction: '+23%',
      peak_periods: ['D√©cembre-Janvier', 'Juillet-Ao√ªt'],
      market_insights: [
        'Forte demande dans la r√©gion de Dakar',
        'Croissance du march√© r√©sidentiel',
        'Opportunit√©s dans l\'immobilier commercial'
      ],
      recommendations: [
        'Intensifier le marketing en d√©cembre',
        'D√©velopper l\'offre √† Thi√®s et Saint-Louis',
        'Am√©liorer l\'exp√©rience mobile'
      ]
    };
  }

  getMockAnomalies() {
    return {
      anomalies_detected: [
        {
          metric: 'conversion_rate',
          current: '2.1%',
          expected: '3.2%',
          severity: 'medium'
        }
      ],
      explanations: [
        'Baisse inhabituelle du taux de conversion en France'
      ],
      suggested_actions: [
        'V√©rifier les pages de conversion',
        'Analyser le parcours utilisateur'
      ]
    };
  }

  getMockReport() {
    return {
      executive_summary: 'Croissance solide de 23% avec opportunit√©s d\'expansion.',
      key_findings: [
        'March√© s√©n√©galais en forte croissance',
        'Demande √©lev√©e pour le r√©sidentiel',
        'Potentiel inexploit√© en r√©gions'
      ],
      regional_analysis: {
        dakar: { growth: '+35%', potential: 'high' },
        thies: { growth: '+18%', potential: 'medium' },
        saint_louis: { growth: '+12%', potential: 'high' }
      },
      recommendations: [
        'Expansion g√©ographique',
        'Am√©lioration UX mobile',
        'Partenariats locaux'
      ]
    };
  }

  getMockPricingOptimization() {
    return {
      suggested_price: 75000000,
      price_range: { min: 65000000, max: 85000000 },
      market_position: 'competitive',
      confidence_score: 0.87
    };
  }

  getMockSentimentAnalysis() {
    return {
      overall_sentiment: 'positive',
      sentiment_score: 0.72,
      key_themes: ['Facilit√© d\'utilisation', 'Service client', 'Prix'],
      improvement_areas: ['Temps de r√©ponse', 'Photos des biens'],
      positive_highlights: ['Interface intuitive', 'Support r√©actif']
    };
  }

  getMockRecommendations() {
    return {
      properties: [
        { id: 1, match_score: 0.94, reason: 'Correspond parfaitement √† vos crit√®res' },
        { id: 2, match_score: 0.87, reason: 'Bon rapport qualit√©-prix' }
      ],
      search_tips: [
        '√âlargissez votre zone de recherche',
        'Consid√©rez les biens r√©cemment r√©nov√©s'
      ],
      market_alerts: [
        'Baisse des prix dans votre zone d\'int√©r√™t',
        'Nouvelles propri√©t√©s disponibles'
      ]
    };
  }
}

// Instance singleton
export const aiManager = new AIManager();

// Fonctions d'aide pour l'utilisation
export const analyzeUserBehavior = async (userData) => {
  return await aiManager.predictUserTrends(userData);
};

export const detectDataAnomalies = async (metrics) => {
  return await aiManager.detectAnomalies(metrics);
};

export const generateAIReport = async (data) => {
  return await aiManager.generateIntelligentReport(data);
};

export const optimizePropertyPricing = async (propertyData) => {
  return await aiManager.optimizePricing(propertyData);
};

export const analyzeUserSentiment = async (feedback) => {
  return await aiManager.analyzeSentiment(feedback);
};

export const getPersonalizedRecommendations = async (userProfile, preferences) => {
  return await aiManager.generatePersonalizedRecommendations(userProfile, preferences);
};

export default aiManager;
