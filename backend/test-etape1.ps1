# Test √âTAPE 1 - Base de donn√©es

Write-Host "üß™ TEST √âTAPE 1 - BASE DE DONN√âES" -ForegroundColor Green
Write-Host "=================================" -ForegroundColor Green

# Test 1: Health check (doit toujours marcher)
Write-Host "`n1Ô∏è‚É£ Health Check..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:5000/health" -UseBasicParsing -TimeoutSec 5
    $data = $response.Content | ConvertFrom-Json
    Write-Host "‚úÖ Health OK - Status: $($data.status)" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Health √©chou√©: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Test 2: Nouveau test base de donn√©es
Write-Host "`n2Ô∏è‚É£ Test Base de donn√©es..." -ForegroundColor Yellow
try {
    $response = Invoke-WebRequest -Uri "http://localhost:5000/db-test" -UseBasicParsing -TimeoutSec 5
    $data = $response.Content | ConvertFrom-Json
    
    if ($data.success) {
        Write-Host "‚úÖ Base de donn√©es OK!" -ForegroundColor Green
        Write-Host "   Utilisateurs: $($data.userCount)" -ForegroundColor Gray
        Write-Host "   Message: $($data.message)" -ForegroundColor Gray
        Write-Host "   Timestamp: $($data.timestamp)" -ForegroundColor Gray
    } else {
        Write-Host "‚ùå Base de donn√©es KO: $($data.message)" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå DB Test √©chou√©: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéØ R√âSULTAT √âTAPE 1" -ForegroundColor Cyan
Write-Host "==================" -ForegroundColor Cyan
Write-Host "‚úÖ Serveur stable" -ForegroundColor Green
Write-Host "‚úÖ SQLite connect√©e" -ForegroundColor Green
Write-Host "‚úÖ Tables cr√©√©es" -ForegroundColor Green
Write-Host "`n‚û°Ô∏è Pr√™t pour √âTAPE 2 : Authentification" -ForegroundColor Yellow