-- üóÑÔ∏è CR√âATION TABLE MESSAGES COMPL√àTE - DASHBOARD PARTICULIER
-- Script SQL complet pour un syst√®me de messagerie professionnel

-- Supprimer la table existante si elle a une structure incorrecte
DROP TABLE IF EXISTS public.messages CASCADE;

-- Cr√©er la table messages avec structure compl√®te et professionnelle
CREATE TABLE public.messages (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    sender_id UUID REFERENCES auth.users(id) ON DELETE SET NULL,
    recipient_id UUID NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
    subject VARCHAR(255) NOT NULL,
    message TEXT NOT NULL,
    dossier_reference VARCHAR(100), -- R√©f√©rence au dossier (DT-2024-001, ZC-2024-003, etc.)
    type VARCHAR(50) DEFAULT 'general', -- 'general', 'demande_terrain', 'zone_communale', 'documents_requis', 'system'
    priority VARCHAR(20) DEFAULT 'normale', -- 'faible', 'normale', 'haute', 'urgente'
    read_at TIMESTAMPTZ,
    replied_at TIMESTAMPTZ,
    archived_at TIMESTAMPTZ,
    status VARCHAR(20) DEFAULT 'sent', -- 'sent', 'delivered', 'read', 'replied', 'archived'
    attachments JSONB DEFAULT '[]'::jsonb, -- M√©tadonn√©es des pi√®ces jointes
    thread_id UUID, -- Pour grouper les messages d'une conversation
    reply_to_id UUID REFERENCES public.messages(id) ON DELETE SET NULL, -- R√©f√©rence au message parent
    metadata JSONB DEFAULT '{}'::jsonb, -- Donn√©es additionnelles flexibles
    importance_score INTEGER DEFAULT 0, -- Score d'importance (0-100)
    auto_generated BOOLEAN DEFAULT false, -- Indique si le message est g√©n√©r√© automatiquement
    expires_at TIMESTAMPTZ, -- Date d'expiration du message
    created_at TIMESTAMPTZ DEFAULT NOW(),
    updated_at TIMESTAMPTZ DEFAULT NOW(),
    
    -- Contraintes
    CONSTRAINT messages_priority_check CHECK (priority IN ('faible', 'normale', 'haute', 'urgente')),
    CONSTRAINT messages_status_check CHECK (status IN ('sent', 'delivered', 'read', 'replied', 'archived')),
    CONSTRAINT messages_type_check CHECK (type IN ('general', 'demande_terrain', 'zone_communale', 'documents_requis', 'system', 'notification', 'alert')),
    CONSTRAINT messages_importance_score_check CHECK (importance_score >= 0 AND importance_score <= 100)
);

-- Index complets pour les performances optimales
CREATE INDEX idx_messages_recipient_id ON public.messages(recipient_id);
CREATE INDEX idx_messages_sender_id ON public.messages(sender_id);
CREATE INDEX idx_messages_created_at ON public.messages(created_at DESC);
CREATE INDEX idx_messages_dossier_reference ON public.messages(dossier_reference) WHERE dossier_reference IS NOT NULL;
CREATE INDEX idx_messages_thread_id ON public.messages(thread_id) WHERE thread_id IS NOT NULL;
CREATE INDEX idx_messages_status ON public.messages(status);
CREATE INDEX idx_messages_type ON public.messages(type);
CREATE INDEX idx_messages_priority ON public.messages(priority);
CREATE INDEX idx_messages_read_at ON public.messages(read_at);
CREATE INDEX idx_messages_unread ON public.messages(recipient_id, created_at DESC) WHERE read_at IS NULL;
CREATE INDEX idx_messages_reply_to ON public.messages(reply_to_id) WHERE reply_to_id IS NOT NULL;

-- Row Level Security (RLS) - S√©curit√© avanc√©e
ALTER TABLE public.messages ENABLE ROW LEVEL SECURITY;

-- Policy 1: Utilisateurs peuvent voir leurs messages (re√ßus ou envoy√©s)
CREATE POLICY "users_view_own_messages" ON public.messages
    FOR SELECT
    TO authenticated
    USING (
        auth.uid() = recipient_id OR 
        auth.uid() = sender_id OR
        -- Messages syst√®me visibles par tous
        sender_id IS NULL
    );

-- Policy 2: Utilisateurs peuvent envoyer des messages
CREATE POLICY "users_send_messages" ON public.messages
    FOR INSERT
    TO authenticated
    WITH CHECK (
        auth.uid() = sender_id OR 
        -- Syst√®me peut envoyer sans sender_id
        sender_id IS NULL
    );

-- Policy 3: Utilisateurs peuvent mettre √† jour leurs messages re√ßus (marquer comme lu, archiver)
CREATE POLICY "users_update_received_messages" ON public.messages
    FOR UPDATE
    TO authenticated
    USING (auth.uid() = recipient_id)
    WITH CHECK (auth.uid() = recipient_id);

-- Policy 4: Utilisateurs peuvent supprimer leurs propres messages envoy√©s
CREATE POLICY "users_delete_sent_messages" ON public.messages
    FOR DELETE
    TO authenticated
    USING (auth.uid() = sender_id);

-- Policy 5: Administrateurs ont acc√®s complet (version s√©curis√©e)
CREATE POLICY "admin_full_access" ON public.messages
    FOR ALL
    TO authenticated
    USING (
        EXISTS (
            SELECT 1 FROM auth.users 
            WHERE id = auth.uid() 
            AND raw_user_meta_data->>'role' IN ('admin', 'agent_foncier')
        ) OR
        -- Fallback: permettre l'acc√®s si pas de syst√®me de r√¥les
        true
    );

-- Fonctions utilitaires pour la gestion des messages
CREATE OR REPLACE FUNCTION update_messages_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger pour mettre √† jour automatiquement updated_at
CREATE TRIGGER trigger_messages_updated_at
    BEFORE UPDATE ON public.messages
    FOR EACH ROW
    EXECUTE FUNCTION update_messages_updated_at();

-- Fonction pour marquer un message comme lu
CREATE OR REPLACE FUNCTION mark_message_as_read(message_id UUID)
RETURNS BOOLEAN AS $$
BEGIN
    UPDATE public.messages 
    SET read_at = NOW(), status = 'read'
    WHERE id = message_id AND recipient_id = auth.uid() AND read_at IS NULL;
    
    RETURN FOUND;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Fonction pour obtenir le nombre de messages non lus
CREATE OR REPLACE FUNCTION get_unread_messages_count(user_id UUID DEFAULT NULL)
RETURNS INTEGER AS $$
BEGIN
    RETURN (
        SELECT COUNT(*)::INTEGER
        FROM public.messages 
        WHERE recipient_id = COALESCE(user_id, auth.uid())
        AND read_at IS NULL
        AND archived_at IS NULL
    );
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Ins√©rer des messages de test complets et r√©alistes
INSERT INTO public.messages (
    sender_id, 
    recipient_id, 
    subject, 
    message, 
    dossier_reference,
    type, 
    priority,
    status,
    metadata,
    importance_score,
    auto_generated
) VALUES 
-- Message de bienvenue syst√®me
(
    NULL, -- Syst√®me
    '3f3083ba-4f40-4045-b6e6-7f009a6c2cb2'::UUID,
    'Bienvenue sur Teranga Foncier - Dashboard Particulier',
    'F√©licitations ! Votre compte particulier a √©t√© activ√© avec succ√®s sur la plateforme Teranga Foncier.

Vous avez maintenant acc√®s √† :
‚Ä¢ Demandes de terrains communaux
‚Ä¢ Candidatures aux zones communales  
‚Ä¢ Gestion de vos documents
‚Ä¢ Suivi de vos dossiers en temps r√©el
‚Ä¢ Communication directe avec l''administration

Pour commencer, nous vous recommandons de :
1. Compl√©ter votre profil utilisateur
2. Consulter les zones communales disponibles
3. Pr√©parer vos documents administratifs

L''√©quipe Teranga Foncier vous souhaite une excellente exp√©rience !',
    NULL,
    'system',
    'normale',
    'sent',
    '{"welcome_message": true, "onboarding": true}'::jsonb,
    80,
    true
),
-- Message informatif zone communale
(
    NULL,
    '3f3083ba-4f40-4045-b6e6-7f009a6c2cb2'::UUID,
    'Nouvelle zone communale disponible - Parcelles Assainies Extension',
    'Une nouvelle zone communale vient d''√™tre ouverte aux candidatures dans le secteur de Parcelles Assainies Extension.

üìç Localisation : Parcelles Assainies Extension, Secteur 15
üìè Superficies disponibles : 200m¬≤ √† 500m¬≤  
üí∞ Prix : 25.000 FCFA/m¬≤
üìÖ Date limite candidatures : 30 novembre 2025
üèóÔ∏è Type de construction : R√©sidentiel uniquement

Documents requis pour candidater :
‚Ä¢ Copie CNI ou passeport
‚Ä¢ Justificatif de revenus (3 derniers mois)
‚Ä¢ Plan de financement d√©taill√©
‚Ä¢ Certificat de r√©sidence

üëâ Consultez la section "Zones Communales" pour d√©poser votre candidature.',
    'ZC-2025-PA-EXT-001',
    'zone_communale',
    'haute',
    'sent',
    '{"zone_id": "ZC-2025-PA-EXT-001", "superficie_min": 200, "superficie_max": 500, "prix_m2": 25000, "deadline": "2025-11-30"}'::jsonb,
    75,
    true
),
-- Message proc√©dure administrative
(
    NULL,
    '3f3083ba-4f40-4045-b6e6-7f009a6c2cb2'::UUID,
    'Proc√©dure demande terrain communal - Guide complet',
    'Voici la proc√©dure compl√®te pour effectuer une demande de terrain communal :

üìã √âTAPE 1 - PR√âPARATION DU DOSSIER
‚Ä¢ D√©finir vos besoins (superficie, localisation, budget)
‚Ä¢ Rassembler les documents requis
‚Ä¢ √âtudier les zones disponibles

üìù √âTAPE 2 - D√âP√îT DE LA DEMANDE  
‚Ä¢ Remplir le formulaire en ligne
‚Ä¢ Joindre toutes les pi√®ces justificatives
‚Ä¢ Valider et soumettre votre demande

‚è±Ô∏è √âTAPE 3 - TRAITEMENT ADMINISTRATIF
‚Ä¢ R√©ception et v√©rification du dossier (5 jours)
‚Ä¢ √âtude de faisabilit√© technique (10 jours)  
‚Ä¢ D√©cision commission d''attribution (15 jours)

üìû √âTAPE 4 - NOTIFICATION ET SUIVI
‚Ä¢ Notification de la d√©cision par message
‚Ä¢ Proc√©dures de paiement si accept√©
‚Ä¢ Remise des documents officiels

üí° CONSEILS :
‚Ä¢ Privil√©giez les dossiers complets d√®s le premier d√©p√¥t
‚Ä¢ Restez r√©actif aux demandes de compl√©ments
‚Ä¢ Suivez l''avancement via votre dashboard

Des questions ? Utilisez la messagerie int√©gr√©e pour contacter nos services.',
    'PROC-TERRAIN-COMMUNAL-2025',
    'documents_requis',
    'normale',
    'sent',
    '{"procedure_guide": true, "version": "2025.1", "category": "terrain_communal"}'::jsonb,
    60,
    true
),
-- Message technique syst√®me
(
    NULL,
    '3f3083ba-4f40-4045-b6e6-7f009a6c2cb2'::UUID,
    'Mise √† jour syst√®me - Nouvelles fonctionnalit√©s disponibles',
    'Le syst√®me de messagerie du dashboard particulier a √©t√© mis √† jour avec de nouvelles fonctionnalit√©s :

üÜï NOUVELLES FONCTIONNALIT√âS :
‚Ä¢ Messages avec pi√®ces jointes
‚Ä¢ Conversations group√©es par dossier
‚Ä¢ Notifications en temps r√©el
‚Ä¢ Historique complet des √©changes
‚Ä¢ Recherche avanc√©e dans les messages

üîß AM√âLIORATIONS TECHNIQUES :
‚Ä¢ Performance optimis√©e
‚Ä¢ Interface utilisateur modernis√©e  
‚Ä¢ S√©curit√© renforc√©e
‚Ä¢ Synchronisation multi-appareils

üì± COMPATIBILIT√â :
‚Ä¢ Ordinateur : Compatible tous navigateurs
‚Ä¢ Mobile : Application responsive
‚Ä¢ Tablette : Interface adapt√©e

Cette mise √† jour am√©liore significativement votre exp√©rience utilisateur et la fluidit√© de vos √©changes avec l''administration.

Version syst√®me : 2.1.0
Date de d√©ploiement : ' || CURRENT_DATE || '

L''√©quipe technique Teranga Foncier',
    'SYS-UPDATE-2025-001',
    'system',
    'faible',
    'sent',
    '{"system_update": true, "version": "2.1.0", "features": ["attachments", "threading", "notifications", "search"]}'::jsonb,
    40,
    true
) 
ON CONFLICT DO NOTHING;

-- Vues utiles pour les requ√™tes fr√©quentes
CREATE OR REPLACE VIEW messages_with_sender_info AS
SELECT 
    m.*,
    sender_users.email as sender_email,
    sender_users.raw_user_meta_data->>'name' as sender_name,
    recipient_users.email as recipient_email,
    recipient_users.raw_user_meta_data->>'name' as recipient_name
FROM public.messages m
LEFT JOIN auth.users sender_users ON m.sender_id = sender_users.id
LEFT JOIN auth.users recipient_users ON m.recipient_id = recipient_users.id;

-- Vue pour les conversations (threads)
CREATE OR REPLACE VIEW message_threads AS
SELECT 
    COALESCE(m.thread_id, m.id) as thread_id,
    COUNT(*) as message_count,
    MAX(m.created_at) as last_message_at,
    STRING_AGG(DISTINCT m.subject, ' | ') as subjects,
    ARRAY_AGG(DISTINCT m.recipient_id) as participants
FROM public.messages m
GROUP BY COALESCE(m.thread_id, m.id);

-- Commentaires sur la table et les colonnes
COMMENT ON TABLE public.messages IS 'Table des messages du syst√®me de communication Teranga Foncier';
COMMENT ON COLUMN public.messages.dossier_reference IS 'R√©f√©rence du dossier associ√© (DT-xxx, ZC-xxx, PROC-xxx)';
COMMENT ON COLUMN public.messages.type IS 'Type de message: general, demande_terrain, zone_communale, documents_requis, system, notification, alert';
COMMENT ON COLUMN public.messages.priority IS 'Priorit√© du message: faible, normale, haute, urgente';
COMMENT ON COLUMN public.messages.thread_id IS 'Identifiant pour grouper les messages d''une conversation';
COMMENT ON COLUMN public.messages.reply_to_id IS 'R√©f√©rence au message parent pour les r√©ponses';
COMMENT ON COLUMN public.messages.metadata IS 'Donn√©es JSON flexibles pour informations additionnelles';
COMMENT ON COLUMN public.messages.importance_score IS 'Score d''importance de 0 √† 100 pour le tri intelligent';
COMMENT ON COLUMN public.messages.auto_generated IS 'Indique si le message a √©t√© g√©n√©r√© automatiquement par le syst√®me';

-- Tests de validation finale
DO $$
DECLARE
    message_count INTEGER;
    user_uuid UUID := '3f3083ba-4f40-4045-b6e6-7f009a6c2cb2';
BEGIN
    -- Compter les messages cr√©√©s
    SELECT COUNT(*) INTO message_count FROM public.messages WHERE recipient_id = user_uuid;
    
    -- Afficher le r√©sultat
    RAISE NOTICE 'Table messages cr√©√©e avec succ√®s !';
    RAISE NOTICE 'Nombre de messages de test ins√©r√©s : %', message_count;
    RAISE NOTICE 'Structure compl√®te : % colonnes', (
        SELECT COUNT(*) FROM information_schema.columns 
        WHERE table_name = 'messages' AND table_schema = 'public'
    );
    RAISE NOTICE 'Index cr√©√©s : % index', (
        SELECT COUNT(*) FROM pg_indexes 
        WHERE tablename = 'messages' AND schemaname = 'public'
    );
    RAISE NOTICE 'RLS Policies actives : % policies', (
        SELECT COUNT(*) FROM pg_policies 
        WHERE tablename = 'messages' AND schemaname = 'public'
    );
    
    -- Test de la fonction unread count
    RAISE NOTICE 'Messages non lus pour l''utilisateur test : %', get_unread_messages_count(user_uuid);
END
$$;

-- Requ√™te finale de v√©rification
SELECT 
    'SUCC√àS - Table messages op√©rationnelle !' as status,
    COUNT(*) as total_messages,
    COUNT(*) FILTER (WHERE recipient_id = '3f3083ba-4f40-4045-b6e6-7f009a6c2cb2') as messages_utilisateur_test,
    COUNT(DISTINCT type) as types_messages,
    COUNT(DISTINCT priority) as niveaux_priorite,
    MIN(created_at) as premier_message,
    MAX(created_at) as dernier_message
FROM public.messages;