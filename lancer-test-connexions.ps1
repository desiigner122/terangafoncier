# ======================================================================
# SCRIPT POWERSHELL - TEST DE CONNEXION SUPABASE
# Automatise l'installation et l'ex√©cution du test
# ======================================================================

Write-Host "üöÄ LANCEMENT DU TEST DE CONNEXION SUPABASE" -ForegroundColor Green
Write-Host "=" * 50

# V√©rification de Node.js
Write-Host "üîç V√©rification de Node.js..." -ForegroundColor Yellow
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js d√©tect√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n'est pas install√©!" -ForegroundColor Red
    Write-Host "   T√©l√©chargez Node.js depuis: https://nodejs.org/"
    exit 1
}

# Installation des d√©pendances
Write-Host "`nüîÑ Installation des d√©pendances..." -ForegroundColor Yellow
try {
    npm install @supabase/supabase-js --save
    Write-Host "‚úÖ D√©pendances install√©es" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
    exit 1
}

# V√©rification de la configuration
Write-Host "`nüîß CONFIGURATION REQUISE:" -ForegroundColor Yellow
Write-Host "Pour continuer, vous devez configurer:"
Write-Host "1. SUPABASE_URL dans test-connexions-supabase.js" -ForegroundColor Cyan
Write-Host "2. SUPABASE_ANON_KEY dans test-connexions-supabase.js" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìç R√©cup√©rez ces valeurs depuis:" -ForegroundColor Yellow
Write-Host "   Dashboard Supabase > Settings > API" -ForegroundColor White
Write-Host ""

# Demande de confirmation
$confirmation = Read-Host "Avez-vous configur√© les variables? (y/N)"
if ($confirmation -ne 'y' -and $confirmation -ne 'Y') {
    Write-Host "‚ùå Configuration annul√©e" -ForegroundColor Red
    Write-Host "Modifiez le fichier test-connexions-supabase.js puis relancez ce script"
    exit 1
}

# Ex√©cution du test
Write-Host "`nüöÄ Lancement du test de connexion..." -ForegroundColor Green
Write-Host "=" * 50

try {
    node test-connexions-supabase.js
    Write-Host "`n‚úÖ Test termin√©!" -ForegroundColor Green
    
    # V√©rification du rapport
    if (Test-Path "rapport-test-connexions.json") {
        Write-Host "üìÑ Rapport g√©n√©r√©: rapport-test-connexions.json" -ForegroundColor Cyan
        
        # Lecture et affichage du r√©sum√©
        $rapport = Get-Content "rapport-test-connexions.json" | ConvertFrom-Json
        Write-Host "`nüìä R√âSUM√â FINAL:" -ForegroundColor Yellow
        Write-Host "   Total test√©s: $($rapport.total_testes)" -ForegroundColor White
        Write-Host "   Succ√®s: $($rapport.succes)" -ForegroundColor Green
        Write-Host "   √âchecs: $($rapport.echecs)" -ForegroundColor Red
        Write-Host "   Taux de r√©ussite: $($rapport.pourcentage_reussite)%" -ForegroundColor $(if ($rapport.pourcentage_reussite -gt 80) { "Green" } else { "Yellow" })
    }
    
} catch {
    Write-Host "‚ùå Erreur lors de l'ex√©cution du test" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    exit 1
}

Write-Host "`nüéØ PROCHAINES √âTAPES RECOMMAND√âES:" -ForegroundColor Yellow
Write-Host "1. Analyser le rapport: rapport-test-connexions.json"
Write-Host "2. Corriger les comptes en √©chec si n√©cessaire"
Write-Host "3. Retester les comptes probl√©matiques"

Write-Host "`n‚ú® Test de connexion termin√©!" -ForegroundColor Green