-- ============================================
-- SCRIPT FINAL - AJOUTER TOUTES LES COLONNES MANQUANTES √Ä 'requests'
-- ============================================

DO $$
BEGIN
  RAISE NOTICE 'üîß D√©but de la v√©rification et ajout des colonnes...';

  -- Colonne 'parcelle_id' (UUID - r√©f√©rence aux parcelles)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'parcelle_id'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN parcelle_id UUID;
    CREATE INDEX IF NOT EXISTS idx_requests_parcelle_id ON public.requests(parcelle_id);
    RAISE NOTICE '‚úÖ Colonne parcelle_id ajout√©e';
  ELSE
    RAISE NOTICE '‚úì parcelle_id existe d√©j√†';
  END IF;

  -- Colonne 'project_id' (UUID - r√©f√©rence aux projets)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'project_id'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN project_id UUID;
    CREATE INDEX IF NOT EXISTS idx_requests_project_id ON public.requests(project_id);
    RAISE NOTICE '‚úÖ Colonne project_id ajout√©e';
  ELSE
    RAISE NOTICE '‚úì project_id existe d√©j√†';
  END IF;

  -- Colonne 'note' (TEXT)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'note'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN note TEXT;
    RAISE NOTICE '‚úÖ Colonne note ajout√©e';
  ELSE
    RAISE NOTICE '‚úì note existe d√©j√†';
  END IF;

  -- Colonne 'offered_price' (NUMERIC)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'offered_price'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN offered_price NUMERIC(15, 2);
    RAISE NOTICE '‚úÖ Colonne offered_price ajout√©e';
  ELSE
    RAISE NOTICE '‚úì offered_price existe d√©j√†';
  END IF;

  -- Colonne 'payment_method' (TEXT)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'payment_method'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN payment_method TEXT;
    RAISE NOTICE '‚úÖ Colonne payment_method ajout√©e';
  ELSE
    RAISE NOTICE '‚úì payment_method existe d√©j√†';
  END IF;

  -- Colonne 'installment_plan' (JSONB)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'installment_plan'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN installment_plan JSONB DEFAULT '{}'::jsonb;
    RAISE NOTICE '‚úÖ Colonne installment_plan ajout√©e';
  ELSE
    RAISE NOTICE '‚úì installment_plan existe d√©j√†';
  END IF;

  -- Colonne 'bank_details' (JSONB)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'bank_details'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN bank_details JSONB DEFAULT '{}'::jsonb;
    RAISE NOTICE '‚úÖ Colonne bank_details ajout√©e';
  ELSE
    RAISE NOTICE '‚úì bank_details existe d√©j√†';
  END IF;

  -- Colonne 'down_payment' (NUMERIC)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'down_payment'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN down_payment NUMERIC(15, 2);
    RAISE NOTICE '‚úÖ Colonne down_payment ajout√©e';
  ELSE
    RAISE NOTICE '‚úì down_payment existe d√©j√†';
  END IF;

  -- Colonne 'loan_amount' (NUMERIC)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'loan_amount'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN loan_amount NUMERIC(15, 2);
    RAISE NOTICE '‚úÖ Colonne loan_amount ajout√©e';
  ELSE
    RAISE NOTICE '‚úì loan_amount existe d√©j√†';
  END IF;

  -- Colonne 'interest_rate' (NUMERIC)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'interest_rate'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN interest_rate NUMERIC(5, 2);
    RAISE NOTICE '‚úÖ Colonne interest_rate ajout√©e';
  ELSE
    RAISE NOTICE '‚úì interest_rate existe d√©j√†';
  END IF;

  -- Colonne 'loan_duration_months' (INTEGER)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'loan_duration_months'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN loan_duration_months INTEGER;
    RAISE NOTICE '‚úÖ Colonne loan_duration_months ajout√©e';
  ELSE
    RAISE NOTICE '‚úì loan_duration_months existe d√©j√†';
  END IF;

  -- Colonne 'monthly_payment' (NUMERIC)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'monthly_payment'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN monthly_payment NUMERIC(15, 2);
    RAISE NOTICE '‚úÖ Colonne monthly_payment ajout√©e';
  ELSE
    RAISE NOTICE '‚úì monthly_payment existe d√©j√†';
  END IF;

  -- Colonne 'metadata' (JSONB)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'metadata'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN metadata JSONB DEFAULT '{}'::jsonb;
    CREATE INDEX IF NOT EXISTS idx_requests_metadata ON public.requests USING GIN (metadata);
    RAISE NOTICE '‚úÖ Colonne metadata ajout√©e';
  ELSE
    RAISE NOTICE '‚úì metadata existe d√©j√†';
  END IF;

  -- Colonne 'nft_token_id' (TEXT - pour le NFT proof)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'nft_token_id'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN nft_token_id TEXT;
    RAISE NOTICE '‚úÖ Colonne nft_token_id ajout√©e';
  ELSE
    RAISE NOTICE '‚úì nft_token_id existe d√©j√†';
  END IF;

  -- Colonne 'nft_tx_hash' (TEXT - pour le hash de transaction NFT)
  IF NOT EXISTS (
    SELECT 1 FROM information_schema.columns 
    WHERE table_schema = 'public' AND table_name = 'requests' AND column_name = 'nft_tx_hash'
  ) THEN
    ALTER TABLE public.requests ADD COLUMN nft_tx_hash TEXT;
    RAISE NOTICE '‚úÖ Colonne nft_tx_hash ajout√©e';
  ELSE
    RAISE NOTICE '‚úì nft_tx_hash existe d√©j√†';
  END IF;

  RAISE NOTICE 'üéâ V√©rification termin√©e - Toutes les colonnes sont maintenant pr√©sentes!';
END $$;


-- ============================================
-- V√âRIFICATION FINALE - STRUCTURE COMPL√àTE
-- ============================================
SELECT 
  'üìã STRUCTURE COMPL√àTE DE LA TABLE REQUESTS:' as info,
  column_name, 
  data_type,
  is_nullable,
  CASE 
    WHEN column_default IS NOT NULL THEN LEFT(column_default::text, 50)
    ELSE NULL 
  END as column_default_preview
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'requests'
ORDER BY ordinal_position;

-- Afficher le nombre total de colonnes
SELECT 
  'üìä STATISTIQUES:' as info,
  COUNT(*) as nombre_total_colonnes,
  COUNT(CASE WHEN is_nullable = 'YES' THEN 1 END) as colonnes_nullables,
  COUNT(CASE WHEN column_default IS NOT NULL THEN 1 END) as colonnes_avec_default
FROM information_schema.columns 
WHERE table_schema = 'public' 
  AND table_name = 'requests';


-- ============================================
-- R√âSULTAT ATTENDU
-- ============================================
-- üîß Messages de progression
-- ‚úÖ Messages de confirmation pour chaque colonne ajout√©e
-- üéâ V√©rification termin√©e - Toutes les colonnes sont maintenant pr√©sentes!
-- 
-- Puis deux tables:
-- 1. Liste compl√®te de TOUTES les colonnes avec types et valeurs par d√©faut
-- 2. Statistiques: nombre total de colonnes, nullables, avec default
