-- Script pour créer tous les comptes de démonstration
-- Exécuter après avoir résolu les erreurs de structure de base de données

-- Insérer les utilisateurs de démonstration dans auth.users
INSERT INTO auth.users (
  id,
  instance_id,
  aud,
  role,
  email,
  encrypted_password,
  email_confirmed_at,
  confirmation_sent_at,
  confirmation_token,
  recovery_sent_at,
  recovery_token,
  email_change_token_new,
  email_change,
  email_change_sent_at,
  last_sign_in_at,
  raw_app_meta_data,
  raw_user_meta_data,
  is_super_admin,
  created_at,
  updated_at,
  phone,
  phone_confirmed_at,
  phone_change,
  phone_change_token,
  phone_change_sent_at,
  email_change_token_current,
  email_change_confirm_status,
  banned_until,
  reauthentication_token,
  reauthentication_sent_at,
  is_sso_user,
  deleted_at
) VALUES 
-- 1. Admin
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'admin@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "admin", "name": "Admin Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 2. Particulier (Acheteur)
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'particulier@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "particular", "name": "Particulier Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 3. Vendeur
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'vendeur@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "vendeur", "name": "Vendeur Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 4. Investisseur
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'investisseur@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "investisseur", "name": "Investisseur Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 5. Municipalité
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'municipalite@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "municipalite", "name": "Municipalité Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 6. Notaire
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'notaire@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "notaire", "name": "Notaire Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 7. Géomètre
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'geometre@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "geometre", "name": "Géomètre Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 8. Banque
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'banque@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "banque", "name": "Banque Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
),
-- 9. Promoteur
(
  gen_random_uuid(),
  '00000000-0000-0000-0000-000000000000',
  'authenticated',
  'authenticated',
  'promoteur@terangafoncier.com',
  crypt('demo123', gen_salt('bf')),
  now(),
  now(),
  '',
  null,
  '',
  '',
  '',
  null,
  now(),
  '{"provider": "email", "providers": ["email"]}',
  '{"role": "promoteur", "name": "Promoteur Demo"}',
  false,
  now(),
  now(),
  null,
  null,
  '',
  '',
  null,
  '',
  0,
  null,
  '',
  null,
  false,
  null
);

-- Créer les profils correspondants dans la table profiles
INSERT INTO profiles (
  id,
  email,
  role,
  company_name,
  phone,
  created_at,
  updated_at
) 
SELECT 
  u.id,
  u.email,
  (u.raw_user_meta_data->>'role')::text,
  (u.raw_user_meta_data->>'name')::text,
  '+221 77 123 45 67',
  now(),
  now()
FROM auth.users u 
WHERE u.email IN (
  'admin@terangafoncier.com',
  'particulier@terangafoncier.com',
  'vendeur@terangafoncier.com',
  'investisseur@terangafoncier.com',
  'municipalite@terangafoncier.com',
  'notaire@terangafoncier.com',
  'geometre@terangafoncier.com',
  'banque@terangafoncier.com',
  'promoteur@terangafoncier.com'
);

-- Vérifier les utilisateurs créés
SELECT 
  u.email,
  u.raw_user_meta_data->>'role' as role,
  u.raw_user_meta_data->>'name' as name,
  u.created_at,
  p.id as profile_id
FROM auth.users u
LEFT JOIN profiles p ON u.id = p.id
WHERE u.email LIKE '%@terangafoncier.com'
ORDER BY u.email;
