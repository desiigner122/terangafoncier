-- ======================================================================
-- DIAGNOSTIC DES COMPTES - PROBL√àMES POTENTIELS
-- Script pour identifier les comptes qui pourraient avoir des probl√®mes
-- ======================================================================

-- 1. V√©rification des mots de passe (encrypted_password)
SELECT 
    'üîê V√âRIFICATION MOTS DE PASSE' as section,
    email,
    raw_user_meta_data->>'full_name' as nom,
    raw_user_meta_data->>'role' as role,
    CASE 
        WHEN encrypted_password IS NULL THEN '‚ùå AUCUN MOT DE PASSE'
        WHEN LENGTH(encrypted_password) < 10 THEN '‚ö†Ô∏è  MOT DE PASSE SUSPECT'
        ELSE '‚úÖ MOT DE PASSE OK'
    END as status_password,
    CASE 
        WHEN email_confirmed_at IS NOT NULL THEN '‚úÖ EMAIL CONFIRM√â'
        ELSE '‚ùå EMAIL NON CONFIRM√â'
    END as status_email
FROM auth.users 
WHERE email NOT LIKE '%@test.com'
ORDER BY raw_user_meta_data->>'role', email;

-- 2. V√©rification des colonnes critiques
SELECT 
    '‚ö†Ô∏è  COLONNES CRITIQUES' as section,
    email,
    raw_user_meta_data->>'full_name' as nom,
    CASE WHEN id IS NULL THEN '‚ùå PAS D''ID' ELSE '‚úÖ ID OK' END as id_status,
    CASE WHEN aud IS NULL THEN '‚ùå PAS D''AUD' ELSE '‚úÖ AUD OK' END as aud_status,
    CASE WHEN role IS NULL THEN '‚ùå PAS DE ROLE AUTH' ELSE '‚úÖ ROLE AUTH OK' END as auth_role_status,
    CASE WHEN instance_id IS NULL THEN '‚ùå PAS D''INSTANCE_ID' ELSE '‚úÖ INSTANCE_ID OK' END as instance_status
FROM auth.users 
WHERE email NOT LIKE '%@test.com'
  AND (id IS NULL OR aud IS NULL OR role IS NULL OR instance_id IS NULL)
ORDER BY email;

-- 3. Comptes avec des probl√®mes potentiels
SELECT 
    'üö® COMPTES PROBL√âMATIQUES' as section,
    email,
    raw_user_meta_data->>'full_name' as nom,
    raw_user_meta_data->>'role' as user_role,
    CASE 
        WHEN encrypted_password IS NULL THEN 'AUCUN MOT DE PASSE'
        WHEN email_confirmed_at IS NULL THEN 'EMAIL NON CONFIRM√â'
        WHEN id IS NULL THEN 'ID MANQUANT'
        WHEN aud IS NULL THEN 'AUD MANQUANT'
        WHEN role IS NULL THEN 'ROLE AUTH MANQUANT'
        WHEN instance_id IS NULL THEN 'INSTANCE_ID MANQUANT'
        ELSE 'AUTRE PROBL√àME'
    END as probleme
FROM auth.users 
WHERE email NOT LIKE '%@test.com'
  AND (
    encrypted_password IS NULL 
    OR email_confirmed_at IS NULL 
    OR id IS NULL 
    OR aud IS NULL 
    OR role IS NULL 
    OR instance_id IS NULL
  )
ORDER BY email;

-- 4. Comptes cr√©√©s r√©cemment sans mot de passe
SELECT 
    'üîç COMPTES R√âCENTS SUSPECTS' as section,
    email,
    raw_user_meta_data->>'full_name' as nom,
    raw_user_meta_data->>'role' as role,
    created_at::date as date_creation,
    CASE 
        WHEN encrypted_password IS NULL THEN '‚ùå PAS DE MOT DE PASSE'
        WHEN LENGTH(encrypted_password) < 10 THEN '‚ö†Ô∏è  MOT DE PASSE FAIBLE'
        ELSE '‚úÖ MOT DE PASSE OK'
    END as status_password
FROM auth.users 
WHERE email NOT LIKE '%@test.com'
  AND created_at >= CURRENT_DATE - INTERVAL '7 days'
  AND (encrypted_password IS NULL OR LENGTH(encrypted_password) < 10)
ORDER BY created_at DESC;

-- 5. R√©sum√© des probl√®mes
SELECT 
    'üìä R√âSUM√â DES PROBL√àMES' as section,
    (SELECT COUNT(*) FROM auth.users WHERE email NOT LIKE '%@test.com' AND encrypted_password IS NULL) as comptes_sans_password,
    (SELECT COUNT(*) FROM auth.users WHERE email NOT LIKE '%@test.com' AND email_confirmed_at IS NULL) as comptes_email_non_confirme,
    (SELECT COUNT(*) FROM auth.users WHERE email NOT LIKE '%@test.com' AND (id IS NULL OR aud IS NULL OR role IS NULL)) as comptes_colonnes_manquantes,
    (SELECT COUNT(*) FROM auth.users WHERE email NOT LIKE '%@test.com' AND encrypted_password IS NOT NULL AND email_confirmed_at IS NOT NULL) as comptes_ok
FROM auth.users LIMIT 1;

-- 6. Instructions de correction
SELECT 
    'üîß INSTRUCTIONS DE CORRECTION' as section,
    'Si des comptes n''ont pas de mot de passe:' as etape_1,
    'UPDATE auth.users SET encrypted_password = crypt(''password123'', gen_salt(''bf'')) WHERE email = ''email-problematique'';' as commande_1,
    'Si des emails ne sont pas confirm√©s:' as etape_2,
    'UPDATE auth.users SET email_confirmed_at = NOW(), confirmed_at = NOW() WHERE email = ''email-problematique'';' as commande_2
FROM auth.users LIMIT 1;