import { createClient } from '@supabase/supabase-js';

// Configuration Supabase avec cl√© de production
const supabaseUrl = 'https://ndenqikcogzrkrjnlvns.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5kZW5xaWtjb2d6cmtyam5sdm5zIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY2NjMzMDQsImV4cCI6MjA3MjIzOTMwNH0.4UOe3QXy8DywtlOkgtZn9A9xrVIW2tnYEowjJX3VbYM';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function checkRealUsers() {
  console.log('üîç Analyse des comptes r√©els dans Teranga Foncier...\n');
  
  try {
    // V√©rifier la table profiles (accessible avec RLS)
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false });
      
    if (profilesError) {
      console.log('‚ùå Erreur profiles:', profilesError.message);
    } else {
      console.log('üë§ PROFILS UTILISATEURS:', profiles?.length || 0);
      if (profiles?.length > 0) {
        profiles.forEach((profile, index) => {
          console.log(`  ${index + 1}. ${profile.email || profile.id}`);
          console.log(`     Role: ${profile.role || 'Non d√©fini'}`);
          console.log(`     Status: ${profile.status || 'Non d√©fini'}`);
          console.log(`     Cr√©√©: ${profile.created_at}`);
          console.log(`     Nom: ${profile.full_name || 'Non renseign√©'}`);
          console.log('     ---');
        });
      }
    }
    
    // V√©rifier les demandes de terrain
    const { data: requests, error: requestsError } = await supabase
      .from('land_requests')
      .select('*')
      .order('created_at', { ascending: false });
      
    if (!requestsError && requests?.length > 0) {
      console.log(`\nüè° DEMANDES DE TERRAIN: ${requests.length}`);
      requests.slice(0, 5).forEach((request, index) => {
        console.log(`  ${index + 1}. ${request.title || 'Sans titre'}`);
        console.log(`     Utilisateur: ${request.user_id}`);
        console.log(`     Status: ${request.status || 'En attente'}`);
        console.log(`     Zone: ${request.zone || 'Non d√©finie'}`);
        console.log('     ---');
      });
    } else {
      console.log(`\nüè° DEMANDES DE TERRAIN: ${requests?.length || 0}`);
    }
    
    // V√©rifier les favoris
    const { data: favorites, error: favError } = await supabase
      .from('favorites')
      .select('*')
      .order('created_at', { ascending: false });
      
    console.log(`\n‚≠ê FAVORIS: ${favorites?.length || 0}`);
    
    // V√©rifier les activit√©s utilisateur
    const { data: activities, error: actError } = await supabase
      .from('user_activities')
      .select('*')
      .order('created_at', { ascending: false });
      
    console.log(`\nüìä ACTIVIT√âS UTILISATEUR: ${activities?.length || 0}`);
    
    // R√©sum√© des donn√©es r√©elles
    console.log('\n' + '='.repeat(50));
    console.log('üìà R√âSUM√â DES DONN√âES R√âELLES:');
    console.log(`   ‚Ä¢ Profils utilisateurs: ${profiles?.length || 0}`);
    console.log(`   ‚Ä¢ Demandes de terrain: ${requests?.length || 0}`);
    console.log(`   ‚Ä¢ Favoris: ${favorites?.length || 0}`);
    console.log(`   ‚Ä¢ Activit√©s: ${activities?.length || 0}`);
    console.log('='.repeat(50));
    
    // V√©rifier s'il y a un utilisateur actuellement connect√©
    const { data: { user } } = await supabase.auth.getUser();
    if (user) {
      console.log('\nüîê UTILISATEUR ACTUELLEMENT CONNECT√â:');
      console.log(`   Email: ${user.email}`);
      console.log(`   ID: ${user.id}`);
      console.log(`   Role: ${user.user_metadata?.role || 'Non d√©fini'}`);
    } else {
      console.log('\nüîê Aucun utilisateur connect√© actuellement');
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la v√©rification:', error);
  }
}

checkRealUsers();