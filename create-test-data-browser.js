// Script Ã  exÃ©cuter dans la console du navigateur pour crÃ©er des donnÃ©es de test
// Ouvrir les DevTools (F12) et coller ce script dans la console

// 1. CrÃ©er des utilisateurs de test
const createTestUsers = async () => {
  const users = [
    { email: 'user1@test.com', full_name: 'Jean Dupont', role: 'particulier' },
    { email: 'user2@test.com', full_name: 'Marie Martin', role: 'vendeur' },
    { email: 'notaire@test.com', full_name: 'Me Bernard', role: 'notaire' },
  ];

  for (const user of users) {
    const { error } = await supabase
      .from('profiles')
      .upsert([{
        id: crypto.randomUUID(),
        ...user,
        status: 'active',
        created_at: new Date().toISOString()
      }]);
    
    if (error) console.error('Error creating user:', error);
    else console.log('âœ… User created:', user.full_name);
  }
};

// 2. CrÃ©er des propriÃ©tÃ©s de test avec statut pending
const createTestProperties = async () => {
  const properties = [
    {
      title: 'Villa moderne Ã  Dakar',
      description: 'Belle villa avec piscine et jardin',
      price: 150000000,
      location: 'Dakar, SÃ©nÃ©gal',
      verification_status: 'pending'
    },
    {
      title: 'Appartement centre-ville',
      description: 'Appartement 3 piÃ¨ces rÃ©novÃ©',
      price: 75000000,
      location: 'Dakar, SÃ©nÃ©gal', 
      verification_status: 'pending'
    }
  ];

  for (const property of properties) {
    const { error } = await supabase
      .from('properties')
      .insert([{
        id: crypto.randomUUID(),
        ...property,
        owner_id: crypto.randomUUID(), // Random owner ID
        status: 'active',
        created_at: new Date().toISOString()
      }]);
    
    if (error) console.error('Error creating property:', error);
    else console.log('âœ… Property created:', property.title);
  }
};

// 3. CrÃ©er des tickets de support de test
const createTestTickets = async () => {
  const tickets = [
    {
      title: 'ProblÃ¨me de connexion',
      description: 'Je n\'arrive pas Ã  me connecter Ã  mon compte',
      category: 'technical',
      priority: 'high',
      status: 'open'
    },
    {
      title: 'Question validation propriÃ©tÃ©',
      description: 'Combien de temps pour valider ma propriÃ©tÃ©?',
      category: 'property_validation', 
      priority: 'medium',
      status: 'open'
    }
  ];

  for (const ticket of tickets) {
    const { error } = await supabase
      .from('support_tickets')
      .insert([{
        id: crypto.randomUUID(),
        ...ticket,
        user_id: crypto.randomUUID(), // Random user ID
        created_at: new Date().toISOString()
      }]);
    
    if (error) console.error('Error creating ticket:', error);
    else console.log('âœ… Ticket created:', ticket.title);
  }
};

// ExÃ©cuter toutes les fonctions
const createAllTestData = async () => {
  console.log('ğŸš€ Creating test data...');
  await createTestUsers();
  await createTestProperties();
  await createTestTickets();
  console.log('âœ… All test data created!');
  console.log('ğŸ“Š Refresh your admin dashboard to see the data');
};

// Lancer la crÃ©ation des donnÃ©es de test
createAllTestData();