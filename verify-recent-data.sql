-- ============================================
-- V√âRIFIER SI LES REQUESTS ET TRANSACTIONS ONT √âT√â CR√â√âES
-- ============================================

-- 1. V√©rifier les requests cr√©√©es r√©cemment (derni√®res 10 minutes)
SELECT 
  '‚úÖ REQUESTS R√âCENTES:' as info,
  id,
  user_id,
  type,
  status,
  offered_price,
  parcelle_id,
  created_at
FROM public.requests
WHERE created_at > NOW() - INTERVAL '10 minutes'
ORDER BY created_at DESC
LIMIT 5;

-- 2. V√©rifier les transactions cr√©√©es r√©cemment (derni√®res 10 minutes)
SELECT 
  '‚úÖ TRANSACTIONS R√âCENTES:' as info,
  id,
  user_id,
  request_id,
  amount,
  currency,
  status,
  description,
  created_at
FROM public.transactions
WHERE created_at > NOW() - INTERVAL '10 minutes'
ORDER BY created_at DESC
LIMIT 5;

-- 3. Compter le nombre total de requests
SELECT 
  'üìä STATISTIQUES:' as info,
  COUNT(*) as total_requests,
  COUNT(CASE WHEN created_at > NOW() - INTERVAL '1 hour' THEN 1 END) as requests_derniere_heure,
  COUNT(CASE WHEN type = 'one_time' THEN 1 END) as requests_one_time
FROM public.requests;

-- 4. Compter le nombre total de transactions
SELECT 
  'üìä STATISTIQUES TRANSACTIONS:' as info,
  COUNT(*) as total_transactions,
  COUNT(CASE WHEN created_at > NOW() - INTERVAL '1 hour' THEN 1 END) as transactions_derniere_heure
FROM public.transactions;


-- ============================================
-- R√âSULTAT ATTENDU
-- ============================================
-- Si le bouton a fonctionn√©, tu devrais voir:
-- - Au moins 1 request r√©cente avec type='one_time'
-- - Au moins 1 transaction r√©cente li√©e √† cette request
-- 
-- Si tu ne vois rien, le bouton n'a pas r√©ussi √† ins√©rer dans la base
